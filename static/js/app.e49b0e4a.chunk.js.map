{"version":3,"sources":["SignupApp.js","ProfileApp.js","LoginApp.js","TitleMenu.js","App.js"],"names":["SignUpApp","useState","signedUp","setSignedUp","username","setUsername","password","setPassword","allowed","setAllowed","errorPass","setErrorPass","errorUser","setErrorUser","doLogin","useCallback","LoginApp","name","Text","style","styles","title","Button","onPress","TextInput","placeholder","placeholderTextColor","value","onChangeText","text","input","errorStyle","secureTextEntry","StyleSheet","create","fontSize","height","margin","borderWidth","padding","color","container","flex","backgroundColor","alignItems","justifyContent","ProfileApp","View","bio","console","log","loggedIn","setloggedIn","currentUsername","currentPassword","promptButton","setPromptButton","prompt","setPrompt","undefined","TitleMenu","buttonSelect","setButtonSelect","button","App","StatusBar"],"mappings":"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","file":"static/js/app.e49b0e4a.chunk.js","sourcesContent":["import React, { useCallback, useState } from 'react';\r\nimport { Button, Text, TextInput, StyleSheet } from 'react-native'\r\n\r\nimport LoginApp from './LoginApp';\r\nexport default function SignUpApp() {\r\n    let [signedUp, setSignedUp] = useState(false)\r\n    let [username, setUsername] = useState(\"\")\r\n    let [password, setPassword] = useState(\"\")\r\n    let [allowed, setAllowed] = useState(false)\r\n    let [errorPass, setErrorPass] = useState(false)\r\n    let [errorUser, setErrorUser] = useState(false)\r\n    let doLogin = useCallback(() => {\r\n        if (username !== \"\") {\r\n            if(password !== \"\")\r\n            {\r\n            \r\n            setSignedUp(true)\r\n            }\r\n            else{\r\n                setErrorPass(true)\r\n            }\r\n        }\r\n        else{\r\n            setErrorUser(true)\r\n        }\r\n\r\n    })\r\n    if(allowed)\r\n    {\r\n        return <><LoginApp name = {\"hello\"} password = {password} username = {username}></LoginApp></>\r\n    }\r\n\r\n    return !signedUp ? <>\r\n\r\n        <Text style={styles.title}>Welcome, please sign up!</Text>\r\n        <TextInput placeholder=\"Username\"  placeholderTextColor=\"black\" value={username} onChangeText={text => setUsername(text)} style={styles.input}></TextInput>\r\n        <Text style={styles.errorStyle}>{errorUser ? \"A Blank Username! Try Again.\" : \"\"}</Text>\r\n        <TextInput secureTextEntry={true} value={password} onChangeText={text => setPassword(text)} placeholder=\"Password\"  placeholderTextColor=\"black\" style={styles.input}></TextInput>\r\n        <Text style={styles.errorStyle}>{errorPass ? \"Blank Password! Try Again.\" : \"\"}</Text>\r\n        <Button title=\"Sign Up\" onPress={() => doLogin()}></Button>\r\n    </> :\r\n    <>\r\n        <Text style = {styles.title}>Account Created!</Text>\r\n        <Text>To double check, please log in using the button below!</Text>\r\n        <Button title=\"Login\" onPress={() => setAllowed(true)}></Button>\r\n        </>\r\n        //Button\r\n}\r\nconst styles = StyleSheet.create({\r\n    title: {\r\n        fontSize: 30\r\n    },\r\n    input: {\r\n        height: 40,\r\n        margin: 12,\r\n        borderWidth: 3,\r\n        padding: 10,\r\n        fontSize: 20,\r\n\r\n    },\r\n    errorStyle: {\r\n        color: \"red\",\r\n\r\n    },\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#fff',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n});\r\n","import React, { useCallback, useState } from 'react';\r\nimport { Button, Text, TextInput, StyleSheet, View, Image } from 'react-native'\r\nimport SignUpApp from './SignupApp';\r\n\r\nexport default function ProfileApp({username})\r\n{\r\n    return (\r\n        \r\n        <View style = {styles.container}>\r\n       \r\n        <Text style = {styles.title}>Welcome {username}</Text>\r\n        <Text style = {styles.bio}>This Bio is used for someone to share their own biography.</Text>\r\n        </View>\r\n        \r\n    )\r\n}\r\nconst styles = StyleSheet.create({\r\n    bio:{\r\n        height: 40,\r\n        margin: 12,\r\n        borderWidth: 3,\r\n        padding: 10,\r\n        fontSize: 20,\r\n    },\r\n    title: {\r\n        fontSize: 30,\r\n    \r\n    },\r\n    input: {\r\n        height: 40,\r\n        margin: 12,\r\n        borderWidth: 3,\r\n        padding: 10,\r\n        fontSize: 20,\r\n\r\n    },\r\n    errorStyle: {\r\n        color: \"red\",\r\n\r\n    },\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#fff',\r\n        borderWidth: 3,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n});\r\n","import React, { useCallback, useState } from 'react';\r\nimport { Button, Text, TextInput, StyleSheet } from 'react-native'\r\nimport ProfileApp from './ProfileApp';\r\nimport SignUpApp from './SignupApp';\r\nexport default function LoginApp({name, password, username}) {\r\n    \r\nconsole.log(password)\r\nconsole.log(username)\r\nconsole.log(name)\r\n    let [loggedIn, setloggedIn] = useState(false)\r\n    let [currentUsername, setUsername] = useState(\"\")\r\n    let [currentPassword, setPassword] = useState(\"\")\r\n    let [errorPass, setErrorPass] = useState(false)\r\n    let [errorUser, setErrorUser] = useState(false)\r\n    let [promptButton, setPromptButton] = useState(false)\r\n    let [prompt, setPrompt] = useState(false)\r\n    \r\n    \r\n    let doLogin = useCallback(() => {\r\n        if(password === undefined && username == undefined)\r\n        {\r\n                setPrompt(true)\r\n        }\r\n        if (currentUsername !== \"\") {\r\n\r\n            if(currentUsername == username){\r\n\r\n            \r\n            if (currentPassword == password) {\r\n\r\n                setloggedIn(true)\r\n            }\r\n            else {\r\n                setErrorPass(true)\r\n            }\r\n        }\r\n        }\r\n        else {\r\n            setErrorUser(true)\r\n        }\r\n\r\n    })\r\n    if(promptButton)\r\n    {\r\n        return (<><SignUpApp></SignUpApp></>)\r\n    }\r\n\r\n    return !loggedIn ? <>\r\n\r\n        <Text style={styles.title}>Welcome, please log in below!</Text>\r\n        <TextInput placeholder=\"Username\" placeholderTextColor=\"black\" value={currentUsername} onChangeText={text => setUsername(text)} style={styles.input}></TextInput>\r\n        <Text style={styles.errorStyle}>{errorUser ? \"A Blank Username! Try Again.\" : \"\"}</Text>\r\n        <TextInput secureTextEntry={true} value={currentPassword} onChangeText={text => setPassword(text)} placeholder=\"Password\"  placeholderTextColor=\"black\" style={styles.input}></TextInput>\r\n        <Text style={styles.errorStyle}>{errorPass ? \"Wrong Password! Try Again.\" : \"\"}</Text>\r\n        <Button title=\"Login\" onPress={() => doLogin()}></Button>\r\n        <Text style={styles.errorStyle}>{ prompt ? \"If you haven't created an account, please sign up here!\" : \"\"}</Text>\r\n        <Text style={styles.errorStyle}>{ prompt ? <Button title=\"SignUp\" onPress={() => setPromptButton(true)}></Button> : \"\"}</Text>\r\n    </> :\r\n    <>  <ProfileApp username = {username}></ProfileApp>\r\n        </>\r\n}\r\nconst styles = StyleSheet.create({\r\n    title: {\r\n        fontSize: 30\r\n    },\r\n    input: {\r\n        height: 40,\r\n        margin: 12,\r\n        borderWidth: 3,\r\n        padding: 10,\r\n        fontSize: 20,\r\n        placeholder: 'black',\r\n\r\n    },\r\n    errorStyle: {\r\n        color: \"red\",\r\n\r\n    },\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#fff',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n});\r\n","import React, { useCallback, useState } from 'react';\r\nimport { Button, Text, TextInput, StyleSheet } from 'react-native'\r\nimport LoginApp from './LoginApp';\r\nimport SignUpApp from './SignupApp';\r\nexport default function TitleMenu() {\r\n    let [buttonSelect, setButtonSelect] = useState(\"title\")\r\n    \r\nif(buttonSelect == \"title\")\r\n{\r\n   return (\r\n       \r\n<>\r\n<Text style = {styles.title}>Web Application</Text>\r\n<Button title=\"SignUp\" onPress={() => setButtonSelect(\"sign\")}></Button>\r\n<Button title=\"LogIn\" onPress={() => setButtonSelect(\"log\")}></Button>\r\n</>\r\n   )\r\n}\r\nelse if(buttonSelect == \"log\")\r\n{\r\n    return (\r\n    <><LoginApp></LoginApp>\r\n    <Button title=\"Return\" style = {styles.button} onPress={() => setButtonSelect(\"title\")}></Button>\r\n    \r\n    \r\n    </>\r\n    \r\n    )\r\n}\r\nelse if(buttonSelect == \"sign\")\r\n{\r\n    return (<>\r\n    <SignUpApp></SignUpApp>\r\n    <Button title=\"Return\" onPress={() => setButtonSelect(\"title\")}></Button>\r\n    \r\n    </>)\r\n\r\n}\r\n    \r\n}\r\nconst styles = StyleSheet.create({\r\n\r\n    title: {\r\n        fontSize: 30\r\n    },\r\n    button:{\r\n        padding: 12\r\n    },\r\n    input: {\r\n        height: 40,\r\n        margin: 12,\r\n        borderWidth: 3,\r\n        padding: 10,\r\n        fontSize: 20,\r\n\r\n    },\r\n    errorStyle: {\r\n        color: \"red\",\r\n\r\n    },\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#fff',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n});\r\n","import { StatusBar } from 'expo-status-bar';\nimport { useState, useCallBack } from 'react';\nimport { StyleSheet, Text, Button, View, TextInput } from 'react-native';\nimport TitleMenu from './TitleMenu';\nimport LoginApp from './LoginApp';\n\nexport default function App() {\n\n\n  return (\n\n    <View style={styles.container}>\n      <TitleMenu></TitleMenu>\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n\n}\n\nconst styles = StyleSheet.create({\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n\n  },\n  container: {\n    flex: 1,\n   // backgroundColor:'gray',\n    borderWidth: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\n"],"sourceRoot":""}